{"version":3,"sources":["images/image.png","images/SARS-CoV-2_without_background.png","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","api/index.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","deaths","recovered","lastUpdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Cards","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Chart","useState","setDailyData","useEffect","fetchAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","fetchedData","this","wiki","src","covid","alt","image","coronaImage","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96e9471b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","module.exports = __webpack_public_path__ + \"static/media/SARS-CoV-2_without_background.bc71574b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if(country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n\n    try {\n        const {data: {confirmed, deaths, recovered, lastUpdate}} = await axios.get(changeableUrl);\n\n        return { confirmed, deaths, recovered, lastUpdate };\n    } catch (err) {\n        console.log('Error: ' + err);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n        return modifiedData;\n    } catch (err) {\n        console.log('Error: ' + err);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: {countries}} = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    } catch (err) {\n\n    }\n}","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\n    console.log({confirmed, deaths, recovered, lastUpdate});\n    if(!confirmed) {\n        return 'Loading...';\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths due to COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    }, []);\n\n    const barChart = (\n        confirmed\n            ? (\n                <Bar \n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                            data: [confirmed.value, recovered.value, deaths.value]\n                        }],\n                    }}\n                    options={{\n                        legend: {display: false},\n                        title: {display: true, text: `Current state in ${country}`}\n                    }}\n                />\n            ) : null\n    );\n\n    const lineChart = (\n        dailyData.length ? ( \n            <Line\n             data={{\n                labels: dailyData.map(({date}) => date),\n                datasets: [{\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n                }, {\n                    data: dailyData.map(({deaths}) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true,\n                }],\n            }}\n        /> ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\n\nimport coronaImage from './images/image.png';\nimport covid from './images/SARS-CoV-2_without_background.png';\n\nimport {Cards, Chart, CountryPicker} from './components';\n\nclass App extends React.Component {\n\n    state = {\n        data: {\n            data: {},\n            country: '',\n        }\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n\n        this.setState({data: fetchedData});\n    }\n\n    handleCountryChange = async (country) => {\n        //fetch the data\n        const data = await fetchData(country);\n        \n        //set the state\n        this.setState({data, country: country});\n    }\n\n    render() {\n        const {data, country} = this.state;\n\n        return (\n            <div className={styles.container}>\n                <div>\n                    <img className={styles.wiki} src={covid} alt=\"covid\" />\n                    <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n                </div>\n                \n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data} country={country} />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"wiki\":\"App_wiki__1RBX8\"};"],"sourceRoot":""}